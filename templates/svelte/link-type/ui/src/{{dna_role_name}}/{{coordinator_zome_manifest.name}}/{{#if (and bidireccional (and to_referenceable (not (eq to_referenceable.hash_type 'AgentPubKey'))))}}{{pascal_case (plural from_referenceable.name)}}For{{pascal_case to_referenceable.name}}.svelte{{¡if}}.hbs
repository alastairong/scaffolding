<script lang="ts">
import { onMount, getContext } from 'svelte';
import '@material/mwc-circular-progress';
import { decode } from '@msgpack/msgpack';
import { InstalledCell, Record, ActionHash, AppWebsocket, InstalledAppInfo } from '@holochain/client';
import { appInfoContext, appWebsocketContext } from '../../contexts';
import {{pascal_case from_referenceable.name}}Detail from './{{pascal_case from_referenceable.name}}Detail.svelte';

export let {{camel_case to_referenceable.singular_arg}}: {{to_referenceable.hash_type}};

let appInfo = getContext(appInfoContext).getAppInfo();
let appWebsocket = getContext(appWebsocketContext).getAppWebsocket();

let hashes: Array<{{from_referenceable.hash_type}}> | undefined;

let loading = true;
let error: any = undefined;

$: hashes, loading, error;

onMount(async () => {
  const cellData = appInfo.cell_data.find((c: InstalledCell) => c.role_name === '{{dna_role_name}}')!;
  
  try {
    hashes = await appWebsocket.callZome({
      cap_secret: null,
      cell_id: cellData.cell_id,
      zome_name: '{{coordinator_zome_manifest.name}}',
      fn_name: 'get_{{snake_case (plural from_referenceable.name)}}_for_{{snake_case to_referenceable.name}}',
      payload: {{camel_case to_referenceable.singular_arg}},
      provenance: cellData.cell_id[1]
    });
  } catch (e) {
    error = e;
  }
  loading = true;
});

</script>

{#if loading }
<div style="display: flex; flex: 1; align-items: center; justify-content: center">
  <mwc-circular-progress indeterminate></mwc-circular-progress>
</div>
{:else if error}
<span>Error fetching {{lower_case (plural from_referenceable.name)}}: {error.data.data}.</span>
{:else if hashes.length === 0}
<span>No {{lower_case (plural from_referenceable.name)}} found for this {{lower_case to_referenceable.name}}.</span>
{:else}
<div style="display: flex; flex-direction: column">
  {#each hashes as hash}
    <{{pascal_case from_referenceable.name}}Detail {{camel_case from_referenceable.name}}Hash={hash} style="margin-bottom: 8px;"></{{pascal_case from_referenceable.name}}Detail>
  {/each}
</div>
{/if}
